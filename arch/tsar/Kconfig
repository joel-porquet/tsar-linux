config TSAR
	def_bool y
	select CLKSRC_OF
	select CLONE_BACKWARDS # position of tls in clone syscall
	select COMMON_CLK
	select GENERIC_ATOMIC64
	select GENERIC_CLOCKEVENTS
	select GENERIC_CPU_DEVICES
	select GENERIC_IRQ_PROBE
	select GENERIC_IRQ_SHOW
	select GENERIC_IOMAP
	select GENERIC_SMP_IDLE_THREAD
	select GENERIC_STRNCPY_FROM_USER
	select GENERIC_STRNLEN_USER
	#select HAVE_ARCH_JUMP_LABEL # should we implement this? see "mips/kernel/jump_label.c"
	select HAVE_ARCH_TRACEHOOK # user_regset_view API in ptrace
	select HAVE_ARCH_KGDB
	select HAVE_MEMBLOCK
	select ARCH_WANT_FRAME_POINTERS
	select IRQ_DOMAIN
	select MODULES_USE_ELF_REL if MODULES
	select NO_BOOTMEM
	select OF
	select OF_EARLY_FLATTREE

config LOCKDEP_SUPPORT
	bool
	default y

config STACKTRACE_SUPPORT
	bool
	default y

config MMU
	def_bool y

# XXX: no DMA for now
config NO_DMA
	bool
	default y

config RWSEM_GENERIC_SPINLOCK
	def_bool y

config GENERIC_HWEIGHT
	def_bool y

config GENERIC_CALIBRATE_DELAY
	def_bool y

source "init/Kconfig"

source "kernel/Kconfig.freezer"

menu "Processor/system type and features"

choice
	prompt "TSAR system type"
	default ARCH_TSARV5_MONO_SOCLIB

config ARCH_TSARV4_MONO_SOCLIB
	bool "Tsar monocpu v4 soclib"
	select TSAR_V4
	select ARCH_FLATMEM_ENABLE
	select TSAR_SOCLIB

config ARCH_TSARV5_MONO_SOCLIB
	bool "Tsar monocpu v5 soclib"
	select TSAR_V5
	select ARCH_FLATMEM_ENABLE
	select TSAR_SOCLIB

config ARCH_TSARV5_MULTI_SOCLIB
	bool "Tsar multicpu v5 soclib"
	select TSAR_V5
	select ARCH_FLATMEM_ENABLE
	select TSAR_SOCLIB

config ARCH_TSARV5_MONO_FPGA
	bool "Tsar monocpu v5 fpga"
	select TSAR_V5
	select ARCH_FLATMEM_ENABLE
	select TSAR_FPGA

config ARCH_TSARV5_MULTI_FPGA
	bool "Tsar multicpu v5 fpga"
	select TSAR_V5
	select ARCH_FLATMEM_ENABLE
	select TSAR_FPGA

endchoice

config SMP
	bool "Symmetric multi-processing support"
	depends on ARCH_TSARV5_MULTI_SOCLIB || ARCH_TSARV5_MULTI_FPGA

config NR_CPUS
	int "Maximum number of CPUs" if SMP
	range 2 4 if SMP
	default "1" if !SMP
	default "4" if SMP

config TSAR_L1_CACHE_SHIFT
	int "Size of L1 cache line (power of 2)"
	default 6

config PAGE_OFFSET
	hex "User/kernel split address"
	default 0xC0000000

config TSAR_SOCLIB
	bool

config TSAR_FPGA
	bool

config SOCLIB_VCI_ICU
	bool

config SOCLIB_VCI_XICU
	bool

config SOCLIB_VCI_MTTY
	bool

config SOCLIB_VCI_TIMER
	bool
	select CLKSRC_MMIO

config SOCLIB_VCI_IOC
	bool

config TSAR_V4
	bool
	select SOCLIB_VCI_ICU
	select SOCLIB_VCI_TIMER
	select SOCLIB_VCI_IOC
	select SOCLIB_VCI_MTTY

config TSAR_V5
	bool
	select SOCLIB_VCI_XICU
	select SOCLIB_VCI_IOC
	select SOCLIB_VCI_MTTY

source "mm/Kconfig"

config MATH_EMULATION
	def_bool n

config PHYSICAL_START
	hex "Physical address where the kernel is loaded"
	default 0x1000
	help
	  This gives the physical address where the kernel is loaded.
	  Default is to leave one 4KiB free page.

source "kernel/Kconfig.hz"
source "kernel/Kconfig.preempt"

endmenu

menu "Executable file formats"

source "fs/Kconfig.binfmt"

endmenu

source "net/Kconfig"

source "drivers/Kconfig"

source "fs/Kconfig"

source "arch/tsar/Kconfig.debug"

source "security/Kconfig"

source "crypto/Kconfig"

source "lib/Kconfig"
